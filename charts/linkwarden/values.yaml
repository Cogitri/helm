# Default Helm values for fmjstudios/linkwarden.
# Reference: https://github.com/fmjstudios/helm

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Linkwarden Image parameters
##

## Linkwarden Server Image
## ref: https://hub.docker.com/r/linkwarden/server/tags
## @param image.registry [string, default: docker.io] The Docker registry to pull the image from
## @param image.repository [string, default: linkwarden/server] The registry repository to pull the image from
## @param image.tag [string, default: '1.30.1-alpine'] The image tag to pull
## @param image.digest [string] The image digest to pull
## @param image.pullPolicy [string, default: IfNotPresent] The Kubernetes image pull policy
## @param image.pullSecrets [array] A list of secrets to use for pulling images from private registries

image:
  registry: ghcr.io
  repository: linkwarden/linkwarden
  tag: "v2.4.8"
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Linkwarden name overrides
##

## @param nameOverride String to partially override linkwarden.fullname
##
nameOverride: ""

## @param fullnameOverride String to fully override linkwarden.fullname
##
fullnameOverride: ""

## @section Linkwarden configuration parameters
##

## Linkwarden configuration
## ref: https://github.com/dani-garcia/linkwarden/wiki/Configuration-overview

linkwarden:
  ## @param linkwarden.domain [string] The domain name to assign to Linkwarden, to be re-used as the NextAuth URL and
  ## as the 'host' entry within the Ingress configuration
  ##
  domain: ""
  ## Used to encrypt the NextAuth.js JWT, and to hash email verification tokens.
  ##
  nextAuthSecret:
    ## @param linkwarden.nextAuthSecret.value [string] A secret string to encrypt JWTs and hash email verification tokens
    ##
    value: ""
    ## Fetch the NextAuth secret from an existing Secret
    ##
    existingSecret:
      ## @param linkwarden.nextAuthSecret.existingSecret.name [string] The name of an existing secret containing the secret string
      ##
      name: ""
      ## @param linkwarden.nextAuthSecret.existingSecret.key [string] The key within before mentioned secret containing the actual string
      ##
      key: ""
  ## @param linkwarden.paginationTakeCount [default: 20] The number of links to fetch every time you reach the bottom of the webpage
  ##
  paginationTakeCount: 20
  ## @param linkwarden.autoscrollTimeout [default: 30] The amount of time to wait for the website to be archived (in seconds).
  ##
  autoscrollTimeout: 30
  ## @param linkwarden.rearchiveLimit [default: 5] Adjusts how often a user can trigger a new archive for each link (in minutes).
  ##
  rearchiveLimit: 5
  ## @param linkwarden.maxFileSize [string] Optionally set a maximum file size
  ##
  maxFileSize: ""
  ## @param linkwarden.maxLinksPerUser [string] Optionally set the maximum amount of links a single user can create
  ##
  maxLinksPerUser: ""
  ## @param linkwarden.archiveTakeCount [string] Optionally set the number of archives to fetch
  ##
  archiveTakeCount: ""
  ## @param linkwarden.browserTimeout [string] Optionally set timeout duration for the browser
  ##
  browserTimeout: ""
  ## @param linkwarden.ignoreUnauthorizedCA [default: false] Optionally ignore unauthorized Certificate Authorities
  ## (Allow inscure TLS connections)
  ##
  ignoreUnauthorizedCA: false
  ## Paths to use inside tha applications container for file storage.
  ##
  data:
    ## @param linkwarden.data.storageType [default: filesystem] The storage type to use for data, can be either 'filesystem' or 's3'
    ##
    storageType: filesystem
    ## Filesystem data settings
    ##
    filesystem:
      ## @param linkwarden.data.filesystem.dataPath [default: data] The relative path for data to be stored in
      ##
      dataPath: data
      ## Kubernetes PVC settings
      ##
      pvc:
        ## @param linkwarden.data.filesystem.pvc.size [default: 5Gi] The size given to the PVC for the above data paths
        ##
        size: 5Gi
        ## @param linkwarden.data.filesystem.pvc.storageClass [default: standard] The storageClass given to PVCs
        ##
        storageClass: standard
        ## @param linkwarden.data.filesystem.pvc.reclaimPolicy [default: Retain] The resourcePolicy given to PVCs
        ##
        reclaimPolicy: Retain
        ## @param linkwarden.data.filessystem.pvc.existingClaim [string] Provide the name to an existing PVC
        ##
        existingClaim: ""

    ## S3 data settings
    ##
    s3:
      ## @param linkwarden.data.s3.bucketName [string] The name of the S3 bucket to be used for the Linkwarden files
      ##
      bucketName: ""
      ## @param linkwarden.data.s3.endpoint [string] The S3 endpoint to use
      ##
      endpoint: ""
      ## @param linkwarden.data.s3.region [string] The AWS region the S3 bucket is located in
      ##
      region: ""
      ## @param linkwarden.data.s3.forcePathStyle [default: false] Use path-style bucket addresses instead of AWS' DNS subdomain style
      ##
      forcePathStyle: false
      ## The S3 Access Key for before mentioned bucket
      ##
      accessKey:
        ## @param linkwarden.data.s3.accessKey.value [string] The value for the S3 Access Key, to be used within a Kubernetes secret
        ##
        value: ""
        ## Use an existing Secret for the S3 Access Key
        ##
        existingSecret:
          ## @param linkwarden.data.s3.accessKey.existingSecret.name [string] The name of the existing secret
          ##
          name: ""
          ## @param linkwarden.data.s3.accessKey.existingSecret.key [string] The key name within the existing Secret
          ##
          key: ""
      ## The S3 Secret Key for before mentioned bucket
      ##
      secretKey:
        ## @param linkwarden.data.s3.secretKey.value [string] The value for the S3 Secret Key, to be used within a Kubernetes secret
        ##
        value: ""
        ## Use an existing Secret for the S3 Secret Key
        ##
        existingSecret:
          ## @param linkwarden.data.s3.secretKey.existingSecret.name [string] The name of the existing secret
          ##
          name: ""
          ## @param linkwarden.data.s3.secretKey.existingSecret.key [string] The key name within the existing Secret
          ##
          key: ""

  ## Linkwarden Database settings
  ##
  database:
    ## @param linkwarden.database.user [default: linkwarden] The user for the PostgreSQL instance - ignored if 'existingSecret' or 'uri' is set
    ##
    user: "linkwarden"
    ## @param linkwarden.database.password [default: linkwarden] The password to the aforementioned user - ignored if 'existingSecret' or 'uri' is set
    ##
    password: "linkwarden"
    ## @param linkwarden.database.host [string] The hostname for the PostgreSQL instance - ignored if 'existingSecret' or 'uri' is set
    ##
    host: ""
    ## @param linkwarden.database.port [default: 5432] The port for the PostgreSQL instance - ignored if 'existingSecret' or 'uri' is set
    ##
    port: 5432
    ## @param linkwarden.database.name [default: linkwarden] The name for the PostgreSQL database - ignored if 'existingSecret' or 'uri' is set
    ##
    name: "linkwarden"
    ## @param linkwarden.database.uri [string] The URI for the PostgreSQL database - ignored if existingSecret is set
    ##
    uri: ""
    ## Provide an existing secret containing the entire Database URI at the specified key
    ##
    existingSecret:
      ## @param linkwarden.database.uri [string] The name of the existing secret
      ##
      name: ""
      ## @param linkwarden.database.uri [string] The name of the key within the aforementioned existing secret
      ##
      key: ""

  ## Authentication settings
  ##
  auth:
    ## @param linkwarden.auth.disableRegistration [default: false] Disable registration for Linkwarden
    ##
    disableRegistration: false

    ## @param linkwarden.auth.enableCredentials [default: true] Enable credential logins for Linkwarden
    ##
    enableCredentials: true

    ## @param linkwarden.auth.disableNewSSOUsers [default: false] Disable new SSO users
    ##
    disableNewSSOUsers: false

    ## SSO Providers
    ## Officially supported and tested are only Authentik and Keycloak other SSO providers are solely provided for completeness
    ## ref: https://docs.linkwarden.app/self-hosting/sso-oauth
    ## @param linkwarden.auth.sso [array] A list of SSO providers to enable within Linkwarden
    ##
    sso:
      []
      # - provider: "authentik"
      #   customName: "authentik-custom"
      #   issuer: "authentik"
      #   clientId: "someId"
      #   clientSecret: "someSecret"
      # - provider: "keycloak"
      #   customName: "keycloak-custom"
      #   issuer: "keycloak"
      #   existingSecret: "keycloak-creds"

  ## SMTP settings
  ##
  smtp:
    ## @param linkwarden.smtp.enabled [default: false] Enable E-mail integration within Linkwarden
    ##
    enabled: false

    ## The email address from which Linkwarden will send mails e.g.: "vaultwarden@domain.tld"
    ## @param linkwarden.smtp.fromAddress [string] The address from which Linkwarden should send emails
    ##
    fromAddress: ""

    ## The mail server from which Linkwarden will send mails e.g.: "mx.domain.tld"
    ## @param linkwarden.smtp.server [string] The server from which Linkwarden should send emails
    ##
    server: ""

## @section Linkwarden ConfigMap parameters
##

## @param configMapAnnotations Define extra annotations for the Linkwarden ConfigMap
##
configMapAnnotations: {}

## @param configMapLabels Define extra labels for the Linkwarden ConfigMap
##
configMapLabels: {}

## @section Linkwarden Secret parameters
##

## @param secretAnnotations Define extra annoations for the created Kubernetes secrets
##
secretAnnotations: {}

## @param secretLabels Define extra Labels for the created Kubernetes secrets
secretLabels: {}

## @section Ingress parameters
##

## Linkwarden Ingress settings
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
## @param ingress.enabled Enable or disable the creation of Ingress resources
## @param ingress.className [string] Specify an Ingress class for the resource
## @param ingress.annotations [object] Define extra annotations for the Ingress resource
## @param ingress.extraHosts [array] Define extra hostnames & paths for the Ingress resource
## @param ingress.tls [array] Define TLS settings for the Ingress resource
##
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls: []
  #  - secretName: domain-tld-tls
  #    hosts:
  #      - domain.tld
  extraHosts:
    []
    # - host: domain.tld
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific

## @section Service parameters
##

## Linkwarden service settings
## ref: https://kubernetes.io/docs/concepts/services-networking/service/
## @param service.type [string] The type of service resource to create
## @param service.port [int] The port number to assign to the service
## @param service.annotations [object] Define extra annotations for the Service resource
## @param service.labels [object] Define extra labels for the Service resource
##
service:
  type: ClusterIP
  port: 80
  annotations: {}
  labels: {}

## @section RBAC parameters
##

## Linkwarden RBAC settings
## ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/
## @param rbac.create [default: false] Enable or disable the creation of RBAC resources
## @param rbac.rules [array] Define extra rules to be added to the Role resource
##
rbac:
  create: false
  rules: []

## @section Linkwarden Service Account parameters
##

## FMJ Studios Linkwarden Service Account settings
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.create [default: true] Whether or not a service account should be created
## @param serviceAccount.automount [default: true] Whether or not to automatically mount API credentials
## @param serviceAccount.annotations [object] Annotations to add to the service account
## @param serviceAccount.name [string] A custom name for the service account, otherwise linkwarden.fullname is used
## @param serviceAccount.secrets [array] A list of secrets mountable by this service account
##
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # The list of secrets mountable by this service account.
  # See https://kubernetes.io/docs/reference/labels-annotations-taints/#enforce-mountable-secrets
  secrets: []

## @section Linkwarden Probes
##

## Linkwarden Liveness Probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
livenessProbe:
  ## @param livenessProbe.enabled Enable or disable the use of liveness probes
  ##
  enabled: false
  ## @param livenessProbe.initialDelaySeconds Configure the initial delay seconds for the liveness probe
  ##
  initialDelaySeconds: 5
  ## @param livenessProbe.timeoutSeconds Configure the initial delay seconds for the liveness probe
  ##
  timeoutSeconds: 1
  ## @param livenessProbe.periodSeconds Configure the seconds for each period of the liveness probe
  ##
  periodSeconds: 10
  ## @param livenessProbe.successThreshold Configure the success threshold for the liveness probe
  ##
  successThreshold: 1
  ## @param livenessProbe.failureThreshold Configure the failure threshold for the liveness probe
  ##
  failureThreshold: 10

## Linkwarden Readiness Probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
readinessProbe:
  ## @param livenessProbe.enabled Enable or disable the use of readiness probes
  ##
  enabled: false
  ## @param livenessProbe.initialDelaySeconds Configure the initial delay seconds for the readiness probe
  ##
  initialDelaySeconds: 5
  ## @param livenessProbe.timeoutSeconds Configure the initial delay seconds for the readiness probe
  ##
  timeoutSeconds: 1
  ## @param livenessProbe.periodSeconds Configure the seconds for each period of the readiness probe
  ##
  periodSeconds: 10
  ## @param livenessProbe.successThreshold Configure the success threshold for the readiness probe
  ##
  successThreshold: 1
  ## @param livenessProbe.failureThreshold Configure the failure threshold for the readiness probe
  ##
  failureThreshold: 3

## Linkwarden Startup Probe
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
startupProbe:
  ## @param livenessProbe.enabled Enable or disable the use of readiness probes
  ##
  enabled: false
  ## @param livenessProbe.initialDelaySeconds Configure the initial delay seconds for the startup probe
  ##
  initialDelaySeconds: 5
  ## @param livenessProbe.timeoutSeconds Configure the initial delay seconds for the startup probe
  ##
  timeoutSeconds: 1
  ## @param livenessProbe.periodSeconds Configure the seconds for each period of the startup probe
  ##
  periodSeconds: 10
  ## @param livenessProbe.successThreshold Configure the success threshold for the startup probe
  ##
  successThreshold: 1
  ## @param livenessProbe.failureThreshold Configure the failure threshold for the startup probe
  ##
  failureThreshold: 10

## @section Pod Disruption Budget parameters
##

## FMJ Studios Linkwarden pod disruption budget settings
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
## @param podDisruptionBudget.enabled [default: false] Enable the pod disruption budget
## @param podDisruptionBudget.minAvailable The minium amount of pods which need to be available
## @param podDisruptionBudget.maxUnavailable The maximum amount of pods which can be unavailable

podDisruptionBudget:
  enabled: false
  minAvailable:
  maxUnavailable:

## @section Bitnami&reg; PostgreSQL parameters
##

## PostgreSQL configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  ## @param postgresql.enabled Enable or disable the PostgreSQL subchart
  ##
  enabled: true
  ## Authentication parameters
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#setting-the-root-password-on-first-run
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-on-first-run
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-user-on-first-run
  ##
  auth:
    ## @param postgresql.auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
    ##
    enablePostgresUser: true
    ## @param postgresql.auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` is provided
    ##
    postgresPassword: "postgres"
    ## @param postgresql.auth.username Name for a custom user to create
    ##
    username: "linkwarden"
    ## @param postgresql.auth.password Password for the custom user to create. Ignored if `auth.existingSecret` is provided
    ##
    password: "linkwarden"
    ## @param postgresql.auth.database Name for a custom database to create
    ##
    database: "linkwarden"
    ## @param postgresql.auth.usePasswordFiles Mount credentials as a files instead of using an environment variable
    ##
    usePasswordFiles: false
  ## @section PostgreSQL Primary parameters
  ##
  primary:
    ## @param postgresql.primary.name Name of the primary database (eg primary, master, leader, ...)
    ##
    name: primary
    ## PostgreSQL Primary persistence configuration
    ##
    persistence:
      ## @param postgresql.primary.persistence.enabled Enable PostgreSQL Primary data persistence using PVC
      ##
      enabled: true
      ## @param postgresql.primary.persistence.existingClaim Name of an existing PVC to use
      ##
      existingClaim: ""
      ## @param postgresql.primary.persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      ## @param postgresql.primary.persistence.accessModes PVC Access Mode for PostgreSQL volume
      ##
      accessModes:
        - ReadWriteOnce
      ## @param postgresql.primary.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 5Gi
