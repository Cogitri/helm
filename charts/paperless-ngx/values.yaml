# Default Helm values for fmjstudios/paperless-ngx.
# Reference: https://github.com/fmjstudios/helm

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Paperless Image parameters
##

## Paperless Server Image
## ref: https://github.com/paperless-ngx/paperless-ngx/pkgs/container/paperless-ngx
## @param image.registry [string, default: docker.io] The Docker registry to pull the image from
## @param image.repository [string, default: paperless-ngx/paperless-ngx] The registry repository to pull the image from
## @param image.tag [string, default: '1.30.1-alpine'] The image tag to pull
## @param image.digest [string] The image digest to pull
## @param image.pullPolicy [string, default: IfNotPresent] The Kubernetes image pull policy
## @param image.pullSecrets [array] A list of secrets to use for pulling images from private registries

image:
  registry: ghcr.io
  repository: paperless-ngx/paperless-ngx
  tag: "2.3.3"
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Paperless Name overrides
##

## @param nameOverride String to partially override paperless.fullname
##
nameOverride: ""

## @param fullnameOverride String to fully override paperless.fullname
##
fullnameOverride: ""

## @section Paperless Configuration parameters
##

## Paperless configuration
## ref: https://docs.paperless-ngx.com/configuration/
paperless:
  ##
  ##
  domain: ""
  ## Secret Key settings
  ##
  secretKey:
    ##
    ##
    value: ""
    ##
    ##
    existingSecret:
      name: ""
      key: ""

  ## @param paperless.address [default: "::"] The address Paperless should bind to
  ##
  address: "::"
  ## @param paperless.port [default: 8000] The port Paperless should bind to
  ##
  port: 8000
  ## @param paperless.uid [default: 1000] The user ID Paperless should use
  ##
  uid: 1000
  ## @param paperless.gid [default: 1000] The group ID Paperless should use
  ##
  gid: 1000
  ## @param paperless.enableFlower [default: false] Enable the 'Flower' monitoring tool for 'Celery' (Paperless' task queue)
  ## ref: https://flower.readthedocs.io/en/latest/index.html
  ##
  enableFlower: false
  ## @param paperless.webserverWorkers [default: 1] The amount for workers process to spawn for the Nginx server within the container
  ##
  webserverWorkers: 1
  ##
  ##
  taskWorkers: ""
  ##
  ##
  threadsPerWorker: ""
  ##
  ##
  workerTimeout: ""
  ##
  ##
  timeZone: ""
  ##
  ##
  enableNLTK: ""
  ##
  ##
  enableAuditLog: false

  ## Authentication configuration
  ##
  auth:
    ##
    ##
    autoLoginUsername: ""
    ##
    ##
    adminUser: ""
    ##
    ##
    adminPassword: ""
    ##
    ##
    existingSecret: ""
    ##
    ##
    adminMail: ""

  ## Hosting configuration
  ##
  hosting:
    ##
    ##
    trustedOrigins: ""
    ##
    ##
    allowedHosts: ""
    ##
    ##
    corsAllowedHosts: ""
    ##
    ##
    trustedProxies: ""
    ##
    ##
    forceScriptName: ""
    ##
    ##
    staticURL: ""
    ##
    ##
    cookiePrefix: ""
    ##
    ##
    enableHTTPRemoteUser: false
    ##
    ##
    HTTPRemoteUserHeaderName: ""
    ##
    ##
    logoutRedirectURL: ""
    ##
    ##
    useXForwardHost: false
    ##
    ##
    useXForwardPort: false
    ##
    ##
    proxySSLHeader: ""

  ## Redis configuration
  ##
  redis:
    ## @param paperless.redis.host [string] The hostname for the Redis instance
    ##
    host: ""
    ## @param paperless.redis.password [string] The password for the Redis instance
    ##
    password: ""
    ## Redis existing secret
    ##
    existingSecret:
      ## @param paperless.redis.existingSecret.name [string] Provide the name to an existing Secret containing the Redis password
      ##
      name: ""
      ## @param paperless.redis.existingSecret.key [string] Provide the key within the existing Secret containing the Redis password
      ##
      key: ""
    ## @param paperless.redis.prefix [string]
    ##
    prefix: ""

  ## PostgreSQL configuration
  ##
  postgresql:
    ## @param paperless.postgresql.host [string] The hostname for the PostgreSQL database
    ##
    host: ""
    ## @param paperless.postgresql.port [default: 5432] The port for the PostgreSQL database
    ##
    port: 5432
    ## @param paperless.postgresql.name [string] The database name for the PostgreSQL database
    ##
    name: ""
    ## @param paperless.postgresql.user [string] The username for the PostgreSQL database
    ##
    user: ""
    ## @param paperless.postgresql.password [string] The password for the PostgreSQL database
    ##
    password: ""
    ## @param paperless.postgresql.existingSecret [string] An existing BasicAuth secret containing the PostgreSQL credentials
    ##
    existingSecret: ""
    ## @param paperless.postgresql.sslMode [default: prefer] The SSL Mode for the PostgreSQL database
    ##
    sslMode: "prefer"
    ## @param paperless.postgresql.timeout [string] Define a timeout for the database connection
    ##
    timeout: ""

    ## PostgreSQL certificates configuration
    ##
    certs:
      ## @param paperless.postgresql.rootCert [string] The path to a mounted TLS root certificate
      ##
      rootCert: ""
      ## @param paperless.postgresql.cert [string] The path to a mounted TLS certificate
      ##
      cert: ""
      ## @param paperless.postgresql.key [string] The path to a mounted TLS certificate key
      ##
      key: ""

  ## Tika configuration
  ##
  tika:
    ## @param paperless.tika.enabled [default: true] Enable or disable the Apache&reg; integration
    ##
    enabled: true
    ## @param paperless.tika.endpoint [string] Define the Apache Tika endpoint
    ##
    endpoint: ""

  ## Gotenberg configuration
  ##
  gotenberg:
    ## @param paperless.gotenberg.endpoint [string] Define the Apache Gotenberg endpoint
    ##
    endpoint: ""

  ## SMTP configuration
  ##
  smtp:
    ##
    ##
    host: ""
    ##
    ##
    port: ""
    ##
    ##
    user: ""
    ##
    ##
    password: ""
    ##
    ##
    existingSecret: ""
    ##
    ##
    from: ""
    ##
    ##
    useTLS: false
    ##
    ##
    useSSL: false

  ## Application data (paths/filenames) configuration
  ##
  data:
    ## Paths configuration
    ##
    paths:
      ## @param paperless.data.paths.consumptionDir [string] Define a custom consumption directory
      ##
      consumptionDir: ""
      ## @param paperless.data.paths.dataDir [string] Define a custom data directory
      ##
      dataDir: ""
      ## @param paperless.data.paths.trashDir [string] Define a custom trash directory
      ##
      trashDir: ""
      ## @param paperless.data.paths.mediaRoot [string] Define a custom media directory
      ##
      mediaRoot: ""
      ## @param paperless.data.paths.staticDir [string] Define a custom static directory
      ##
      staticDir: ""
      ## @param paperless.data.paths.filenameFormat [string] Define a custom filename format
      ##
      filenameFormat: ""
      ## @param paperless.data.paths.filenameFormatRemoveNone [default: false] Omit placeholders that would resolve to 'none' in filenameFormat
      ##
      filenameFormatRemoveNone: false
      ## @param paperless.paths.loggingDir [string] Define a custom logging directory
      ##
      loggingDir: ""
      ## @param paperless.data.paths.nltkDir [string] Define a custom NLTK processing directory
      ##
      nltkDir: ""
      ## @param paperless.data.paths.emailCertificateLocation [string] Define a path to a certificate (chain) for TLS verification for mail servers
      ##
      emailCertificateLocation: ""

    ## Kubernetes PVC settings
    ##
    pvc:
      ## @param paperless.data.pvc.size [default: 5Gi] The size given to PVCs created from the above data
      ##
      size: 5Gi
      ## @param paperless.data.pvc.storageClass [default: standard] The storageClass given to PVCs created from the above data
      ##
      storageClass: standard
      ## @param paperless.data.pvc.reclaimPolicy [default: Retain] The resourcePolicy given to PVCs created from the above data
      ##
      reclaimPolicy: Retain
      ## @param paperless.data.pvc.existingClaim [string] Provide the name to an existing PVC
      ##
      existingClaim: ""

  ## Logging configuration
  ##
  logging:
    ## @param paperless.logging.logrotateMaxSize [string] Maximum file size for log files before they're rotated
    ##
    logrotateMaxSize: ""
    ## @param paperless.logging.logrotateMaxBackups [string] The number of rotated log files to keep
    ##
    logrotateMaxBackups: ""

  ## OCR configuration
  ##
  ocr:
    ##
    ##
    language: ""
    ##
    ##
    mode: ""
    ##
    ##
    skipArchiveFile: ""
    ##
    ##
    clean: ""
    ##
    ##
    deskew: ""
    ##
    ##
    rotatePages: ""
    ##
    ##
    rotatePagesThreshold: ""
    ##
    ##
    outputType: ""
    ##
    ##
    pages: ""
    ##
    ##
    imageDPI: ""
    ##
    ##
    maxImagePixels: ""
    ##
    ##
    colorConversionStrategy: ""
    ##
    ##
    userArgs: ""

  ## Conversion configuration
  ##
  convesion:
    ##
    ##
    memoryLimit: ""
    ##
    ##
    tmpDir: ""

  ## Consumption configuration
  ##
  consume:
    ##
    ##
    deleteDuplicates: ""
    ##
    ##
    recursive: ""
    ##
    ##
    subdirsAsTags: false
    ##
    ##
    ignorePatterns: ""
    ##
    ##
    barcodeScanner: ""
    ##
    ##
    preConsumeScript: ""
    ##
    ##
    postConsumeScript: ""
    ##
    ##
    filenameDateOrder: ""
    ##
    ##
    numberOfSuggestedDates: ""
    ##
    ##
    thumbnailFontName: ""
    ##
    ##
    ignoreDates: ""
    ##
    ##
    dateOrder: ""

    ## Polling configuration
    ##
    polling:
      ##
      ##
      enabled: false
      ##
      ##
      retryCount: ""
      ##
      ##
      delay: ""

    ## iNotify configuration
    ##
    iNotify:
      ##
      ##
      delay: ""

    ## Barcodes configuration
    ##
    barcodes:
      ##
      ##
      enabled: false
      ##
      ##
      tiffSupport: false
      ##
      ##
      string: ""
      ##
      ##
      enableASNBarcode: ""
      ##
      ##
      ASNBarcodePrefix: ""
      ##
      ##
      upscale: ""
      ##
      ##
      dpi: ""

    ## Collation configuration
    ##
    collate:
      ##
      ##
      enableDoubleSided: ""
      ##
      ##
      doubleSidedSubdir: ""
      ##
      ##
      doubleSidedTiffSupport: false

  ## Binaries configuration
  ##
  binaries:
    ##
    ##
    convert: ""
    ##
    ##
    gs: ""

## @section Bitnami&reg; PostgreSQL parameters
##

## PostgreSQL configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  ## @param postgresql.enabled Enable or disable the PostgreSQL subchart
  ##
  enabled: true
  ## Authentication parameters
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#setting-the-root-password-on-first-run
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-on-first-run
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-user-on-first-run
  ##
  auth:
    ## @param postgresql.auth.enablePostgresUser Assign a password to the "postgres" admin user. Otherwise, remote access will be blocked for this user
    ##
    enablePostgresUser: true
    ## @param postgresql.auth.postgresPassword Password for the "postgres" admin user. Ignored if `auth.existingSecret` is provided
    ##
    postgresPassword: "postgres"
    ## @param postgresql.auth.username Name for a custom user to create
    ##
    username: "paperless"
    ## @param postgresql.auth.password Password for the custom user to create. Ignored if `auth.existingSecret` is provided
    ##
    password: "paperless"
    ## @param postgresql.auth.database Name for a custom database to create
    ##
    database: "paperless"
    ## @param postgresql.auth.usePasswordFiles Mount credentials as a files instead of using an environment variable
    ##
    usePasswordFiles: false
  ## @section PostgreSQL Primary parameters
  ##
  primary:
    ## @param postgresql.primary.name Name of the primary database (eg primary, master, leader, ...)
    ##
    name: primary
    ## PostgreSQL Primary persistence configuration
    ##
    persistence:
      ## @param postgresql.primary.persistence.enabled Enable PostgreSQL Primary data persistence using PVC
      ##
      enabled: true
      ## @param postgresql.primary.persistence.existingClaim Name of an existing PVC to use
      ##
      existingClaim: ""
      ## @param postgresql.primary.persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      ## @param postgresql.primary.persistence.accessModes PVC Access Mode for PostgreSQL volume
      ##
      accessModes:
        - ReadWriteOnce
      ## @param postgresql.primary.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 5Gi

## @section Bitnami&reg; Redis parameters
##

## Redis configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/redis/values.yaml
redis:
  ## @param redis.enabled Enable or disable the Redis&reg; subchart
  ##
  enabled: true
  ## @param architecture Redis&reg; architecture. Allowed values: `standalone` or `replication`
  ##
  architecture: standalone

  ## Redis&reg; Authentication parameters
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/redis#setting-the-server-password-on-first-run
  ##
  auth:
    ## @param redis.auth.password Redis&reg; password
    password: "paperless"

## @section Apache&reg; Tika parameters
##

## Tika configuration
## ref: https://github.com/apache/tika-helm/blob/main/values.yaml
tika:
  ## @param tika.enabled Enable or disable the Apache Tika subchart
  ##
  enabled: true

## @section FMJ Studios Gotenberg parameters
##

## Gotenberg configuration
## ref: https://github.com/fmjstudios/helm/blob/main/charts/gotenberg/values.yaml
gotenberg:
  ## @param gotenberg.enabled Enable or disable the Gotenberg subchart
  ##
  enabled: true

  ## Gotenberg configuration
  ## ref: https://gotenberg.dev/docs/configuration
  gotenberg:
    ## Chromium configuration
    ##
    chromium:
      ## @param gotenberg.chromium.disableJavaScript [default: false] Disable JavaScript
      ##
      disableJavaScript: true
      ## @param gotenberg.chromium.allowList [string] Set the allowed URLs for Chromium using a regular expression - defaults to 'All'
      ##
      allowList: "file:///tmp/.*"

    ## Logging configuration
    ##
    logging:
      ## @param gotenberg.logging.level [default: info] Choose the level of logging detail
      ## Options include error, warn, info, or debug
      ##
      level: warn
