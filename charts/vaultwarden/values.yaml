# Default Helm values for fmjstudios/vaultwarden.
# Reference: https://github.com/fmjstudios/helm

# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Vaultwarden Image parameters
##

## Vaultwarden Server Image
## ref: https://hub.docker.com/r/vaultwarden/server/tags
## @param image.registry [default: ]

image:
  registry: docker.io
  repository: vaultwarden/server
  tag: "1.30.1-alpine"
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

# @param replicas The amount of replicas of the chosen 'kind' to let Kubernetes create
replicas: 1

# @param nameOverride String to partially override vaultwarden.fullname
nameOverride: ""

# @param fullnameOverride String to fully override vaultwarden.fullname
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## @section VaultwardenResources, Resource settings
##

## FMJStudios VaultwardenResources; resource settings
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits The resource limits for the Vaultwarden Resources
## @param resources.requests The resource requests for the Vaultwarden Resources
##
resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @section Autoscaling, Settings
##

## FMJStudios Autoscaling; autoscaling
## @param autoscaling.enabled [default: false] Autoscaling; enable autoscaling
## @param autoscaling.minReplicas [default: 1] Autoscaling; minimum autoscaling replicas
## @param autoscaling.maxReplicas [default: 100] Autoscaling; maximium autoscaling replicas
## @param autoscaling.targetCPUUtilizationPercentage [default: 80] Autoscaling; target CPU utilization for the autoscaler to kick in
## @param autoscaling.targetMemoryUtilizationPercentage [default: 80] Autoscaling; target memory utilization for the autoscaler to kick in
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
