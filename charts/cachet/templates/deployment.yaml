apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cachet.fullname" . }}
  labels:
    {{- include "cachet.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "cachet.selectorLabels" . | nindent 6 }}
  {{- if .Values.strategy -}}
  strategy:
  {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "cachet.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels -}}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cachet.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "cachet.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DOCKER
              value: "true"
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "cachet.secrets.appKey" . }}
                  key: key
            {{- if (or .Values.cachet.database.user .Values.cachet.database.existingSecret) }}
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "cachet.secrets.db" .) .Values.cachet.database.existingSecret }}
                  key: username
            {{- end }}
            {{- if (or .Values.cachet.database.password .Values.cachet.database.existingSecret) }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "cachet.secrets.db" .) .Values.cachet.database.existingSecret }}
                  key: password
            {{- end }}
            {{- if (or .Values.cachet.mail.user .Values.cachet.mail.existingSecret) }}
            - name: MAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "cachet.secrets.mail" .) .Values.cachet.mail.existingSecret }}
                  key: username
            {{- end }}
            {{- if (or .Values.cachet.mail.password .Values.cachet.mail.existingSecret) }}
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "cachet.secrets.mail" .) .Values.cachet.mail.existingSecret }}
                  key: password
            {{- end }}
            {{- if (or .Values.cachet.githubToken.value .Values.cachet.githubToken.existingSecret.name) }}
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "cachet.secrets.github" .) .Values.cachet.githubToken.existingSecret.name }}
                  key: token
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "cachet.fullname" . }}
          {{/* Container settings */}}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /api/v1/ping
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/v1/ping
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /api/v1/ping
              port: http
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
