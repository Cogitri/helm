name: '[CI/CD] Continuous Integration Pipeline'

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  setup:
    name: Set up required tools
    runs-on: ubuntu-latest
    steps:
      # - name: Setup Go
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: '>=1.18.0'

      # - name: Install CFSSL
      #   run: go install github.com/cloudflare/cfssl/cmd/...@latest

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.15.1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true

      - name: Set up Chart-Testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Set up Kind
        uses: helm/kind-action@v1
        with:
          install_only: true

      # - name: Setup Kubectl, Helm and Helmfile
      #   uses: mamezou-tech/setup-helmfile@v2.0.0

      # - name: Create the local Kind Kubernetes cluster
      #   run: make dev-cluster

  integrations:
    name: Run integration tests
    runs-on: ubuntu-latest
    needs: ['setup']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run chart-testing (list-changed)
        id: ct-list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.ct-list-changed.outputs.changed == 'true'
        run: |
          ct lint --config config/ct-config.yaml

      - name: Run kind to create a Kubernetes cluster
        if: steps.ct-list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1
        with:
          config: k8s/cluster/kind-config.yaml

      - name: Run chart-testing (install)
        if: steps.ct-list-changed.outputs.changed == 'true'
        run: |
          ct install --config config/ct-config.yaml
